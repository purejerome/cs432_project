KEYWORD  [line 001]  def
KEYWORD  [line 001]  int
ID       [line 001]  main
SYMBOL   [line 001]  (
SYMBOL   [line 001]  )
SYMBOL   [line 001]  {
KEYWORD  [line 002]  int
ID       [line 002]  a
SYMBOL   [line 002]  ;
ID       [line 003]  a
SYMBOL   [line 003]  =
DECLIT   [line 003]  1
SYMBOL   [line 003]  ;
ID       [line 003]  a
SYMBOL   [line 003]  ==
DECLIT   [line 003]  1
SYMBOL   [line 003]  ;
ID       [line 003]  a
SYMBOL   [line 003]  !=
DECLIT   [line 003]  2
SYMBOL   [line 003]  ;
ID       [line 003]  a
SYMBOL   [line 003]  <=
DECLIT   [line 003]  3
SYMBOL   [line 003]  ;
ID       [line 003]  a
SYMBOL   [line 003]  >=
DECLIT   [line 003]  4
SYMBOL   [line 003]  ;
ID       [line 003]  a
SYMBOL   [line 003]  <
DECLIT   [line 003]  5
SYMBOL   [line 003]  ;
ID       [line 003]  a
SYMBOL   [line 003]  >
DECLIT   [line 003]  6
SYMBOL   [line 003]  ;
KEYWORD  [line 004]  if
SYMBOL   [line 004]  (
KEYWORD  [line 004]  true
SYMBOL   [line 004]  &&
KEYWORD  [line 004]  false
SYMBOL   [line 004]  ||
ID       [line 004]  a
SYMBOL   [line 004]  ==
DECLIT   [line 004]  1
SYMBOL   [line 004]  )
SYMBOL   [line 004]  {
KEYWORD  [line 004]  return
ID       [line 004]  a
SYMBOL   [line 004]  ;
SYMBOL   [line 004]  }
KEYWORD  [line 005]  return
ID       [line 005]  returnx
SYMBOL   [line 005]  ;
SYMBOL   [line 006]  }
